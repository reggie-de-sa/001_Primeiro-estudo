botão direito nesta pasta > Open Git Bash Here
no prompt do Git Bash: git init
isso vai gerar uma sub-pasta oculta .git

no prompt do Git Bash: git status

Adicionar aquivos ao controle de versão
no prompt do Git Bash: git add "meu codigo.txt"
ou git add . --> para adicionar todos os arquivos da pasta

# Criar versões do código com commit
no prompt do Git Bash: git commit -m "commit inicial"

Enviar versão do código para o servidor na nuvem
no prompt do Git Bash:
git remote add origin https://github.com/reggie-de-sa/001_Primeiro-estudo
git push

# Ciclo de atualização de código
no prompt do Git Bash: 
git status
git add .
git status
git commit -m "Adicionado o ciclo de atualização de código"
git push

# Ver o histórico das versões
no prompt do Git Bash: git reflog

# Navegar entre as versões do código
no prompt do Git Bash: 
git reset --hard <id da versao>
ALERTA: usar com muita certeza

# Criar uma Branch
no prompt do Git Bash: 
git branch
git branch staging
git checkout staging
git add .
git commit -m "adicionando codigos na branch staging"
git push
git push --set-upstream origin staging

# Merge de Branches
no prompt do Git Bash: 
git branch
git checkout master
git branch
git pull
git merge staging
git push

# Criar nova branch para trabalhar em uma funcionalidade específica
no prompt do Git Bash: 
git branch
git checkout master
git pull
git checkout -b sistema-de-login master

# Pull request - um merge democrático
no prompt do Git Bash: 
git checkout sistema-de-login
git add
git commit -m "adicionado campos de entrada do sistema de login"
git push

no https://github.com/reggie-de-sa/001_Primeiro-estudo/tree/sistema-de-login
clicar em Compare & Pull request, da branch sistema-de-login
parametrizar os macth para branch master, a partir da branch sistema-de-login
descrever detalhes da alteração (boa prática de domumentação)
clicar em Create pull request


no prompt do Git Bash: 
no prompt do Git Bash: 
no prompt do Git Bash: 


